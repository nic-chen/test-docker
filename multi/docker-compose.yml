version: "3.4"

services:
  apisix:
    build:
      context: ./
      dockerfile: centos/Dockerfile
    restart: always
    volumes:
      - ./apisix_log:/usr/local/apisix/logs
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ports:
      - "9080"
    networks:
      - net-etcd
      # - net-web1
      # - net-web2
      # - net-web3
    deploy:
      replicas: 10
      resources:
          limits:
              cpus: '0.8'
              memory: 512M

  etcd:
    # if you are in the mainland China, please use Azure China mirror:
    # image: gcr.azk8s.cn/etcd-development/etcd:v3.3.12
    image: gcr.io/etcd-development/etcd:v3.3.12
    command: /usr/local/bin/etcd --advertise-client-urls http://0.0.0.0:2379 --listen-client-urls http://0.0.0.0:2379
    restart: always
    volumes:
      - ./etcd_data:/etcd_data
    environment:
      ETCD_DATA_DIR: /etcd_data
    ports:
      - "2379:2379"
    networks:
      - net-etcd

  # web1:
  #   image: ruby:2-alpine
  #   command: sh -c "mkdir -p /tmp/www && echo 'web1' > /tmp/www/web1.txt && ruby -run -ehttpd /tmp/www -p8000"
  #   restart: always
  #   ports:
  #     - "8001:8000"
  #   networks:
  #     - net-web1

  # web2:
  #   image: ruby:2-alpine
  #   command: sh -c "mkdir -p /tmp/www && echo 'web2' > /tmp/www/web2.txt && ruby -run -ehttpd /tmp/www -p8000"
  #   restart: always
  #   ports:
  #     - "8002:8000"
  #   networks:
  #     - net-web2

  # web3:
  #   image: ruby:2-alpine
  #   command: sh -c "mkdir -p /tmp/www && echo 'web2' > /tmp/www/web2.txt && ruby -run -ehttpd /tmp/www -p8000"
  #   restart: always
  #   ports:
  #     - "8003:8000"
  #   networks:
  #     - net-web3


networks:
  net-etcd:
  # net-web1:
  # net-web2:
  # net-web3:
